name: Run tests

on:
  # run on push in master or rel_* branches excluding changes are only on doc or example folders
  push:
    branches:
      - master
      - "rel_*"
      # branches used to test the workflow
      - "workflow_test_*"
    paths-ignore:
      - "doc/**"
      - "examples/**"

env:
  # global env to all steps
  TOX_WORKERS: -n2

jobs:
  amd64-test:
    name: ${{ matrix.python-version }}-${{ matrix.build-type }}-${{ matrix.architecture }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # run this job using this matrix, excluding some combinations below.
      matrix:
        os:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"
        python-version:
          - "2.7"
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
        build-type:
          - "cext"
          - "nocext"
        architecture:
          - x64
          - x86

        include:
          # the mock reconnect test seems to fail on the ci in windows
          - os: "windows-latest"
            pytest-args: "-k 'not MockReconnectTest'"
          # python 2.7 or 3.5 on windows seem to fail also test_hanging_connect_within_overflow
          - os: "windows-latest"
            python-version: "3.5"
            pytest-args: "-k 'not MockReconnectTest and not test_hanging_connect_within_overflow'"
          - os: "windows-latest"
            python-version: "2.7"
            pytest-args: "-k 'not MockReconnectTest and not test_hanging_connect_within_overflow'"

        exclude:
          # c-extensions fail to build on windows for python 3.5 and 2.7
          - os: "windows-latest"
            python-version: "2.7"
            build-type: "cext"
          - os: "windows-latest"
            python-version: "3.5"
            build-type: "cext"
          # linux and osx do not have x86 python
          - os: "ubuntu-latest"
            architecture: x86
          - os: "macos-latest"
            architecture: x86

      fail-fast: false

    # steps to run in each job. Some are github actions, others run shell commands
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox setuptools
          pip list

      - name: Run tests
        run: tox -e github-${{ matrix.build-type }} -- -q --nomemory ${{ matrix.pytest-args }}
  make-alpine-pkg:
        name: Make wheel for arm64
        runs-on: ubuntu-latest
        container: alpine:latest
        steps:
            - name: Prepare
              run: |
                uname -m
                apk update
                apk upgrade
                apk add make
                apk add alpine-sdk
                apk add go
                apk add su-exec

                adduser -G abuild -D jobber
                su jobber -c "abuild-keygen -an"
                find "/home/jobber/.abuild" -name '*.rsa.pub' -exec mv {} /etc/apk/keys/ ';'
                chown root:root /etc/apk/keys/*

            - name: Clone repo
              uses: actions/checkout@v2

            - name: Make package
              run: |
                chmod a+w . packaging/alpine
                su jobber -c "make -C packaging/alpine pkg-local DESTDIR=${GITHUB_WORKSPACE}/pkgs/"

            - name: Publish package
              uses: actions/upload-artifact@v1.0.0
              with:
                name: alpine-pkg
                path: pkgs
  make-alpine-pkg:
        name: Make wheel for arm64
        runs-on: ubuntu-latest
        container: alpine:latest
        steps:
            - name: Prepare
              run: |
                uname -m
                apk update
                apk upgrade
                apk add make
                apk add alpine-sdk
                apk add go
                apk add su-exec
 

            - name: Clone repo
              uses: actions/checkout@v2

            - name: Make package
              run: |
                chmod a+w . packaging/alpine
                su jobber -c "make -C packaging/alpine pkg-local DESTDIR=${GITHUB_WORKSPACE}/pkgs/"

            - name: Publish package
              uses: actions/upload-artifact@v1.0.0
              with:
                name: alpine-pkg
                path: pkgs
test_docker:
    name: Testing arm64 docker
    runs-on: ubuntu-latest
    steps:
    - run: |
        docker run --rm --privileged multiarch/qemu-user-static:register --reset

    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: 'uname -a'

    - uses: docker://multiarch/centos
      with:
        args: >
          bash -c
          "yum update &&
          yumm install -y python3.6 &&
          python3.6 --version &&
          python3.6 -c\"import platform; print(platform.machine())\""
                adduser -G abuild -D jobber
                su jobber -c "abuild-keygen -an"
                find "/home/jobber/.abuild" -name '*.rsa.pub' -exec mv {} /etc/apk/keys/ ';'
                chown root:root /etc/apk/keys/*
